// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mi_message.proto

#ifndef PROTOBUF_mi_5fmessage_2eproto__INCLUDED
#define PROTOBUF_mi_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace medical_imaging {
class MsgCellInfo;
class MsgCellInfoDefaultTypeInternal;
extern MsgCellInfoDefaultTypeInternal _MsgCellInfo_default_instance_;
class MsgInit;
class MsgInitDefaultTypeInternal;
extern MsgInitDefaultTypeInternal _MsgInit_default_instance_;
class MsgMouse;
class MsgMouseDefaultTypeInternal;
extern MsgMouseDefaultTypeInternal _MsgMouse_default_instance_;
class MsgPaging;
class MsgPagingDefaultTypeInternal;
extern MsgPagingDefaultTypeInternal _MsgPaging_default_instance_;
class MsgPoint2;
class MsgPoint2DefaultTypeInternal;
extern MsgPoint2DefaultTypeInternal _MsgPoint2_default_instance_;
class MsgString;
class MsgStringDefaultTypeInternal;
extern MsgStringDefaultTypeInternal _MsgString_default_instance_;
}  // namespace medical_imaging

namespace medical_imaging {

namespace protobuf_mi_5fmessage_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_mi_5fmessage_2eproto

// ===================================================================

class MsgString : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:medical_imaging.MsgString) */ {
 public:
  MsgString();
  virtual ~MsgString();

  MsgString(const MsgString& from);

  inline MsgString& operator=(const MsgString& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgString& default_instance();

  static inline const MsgString* internal_default_instance() {
    return reinterpret_cast<const MsgString*>(
               &_MsgString_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MsgString* other);

  // implements Message ----------------------------------------------

  inline MsgString* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgString* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgString& from);
  void MergeFrom(const MsgString& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgString* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string context = 1;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 1;
  const ::std::string& context() const;
  void set_context(const ::std::string& value);
  #if LANG_CXX11
  void set_context(::std::string&& value);
  #endif
  void set_context(const char* value);
  void set_context(const char* value, size_t size);
  ::std::string* mutable_context();
  ::std::string* release_context();
  void set_allocated_context(::std::string* context);

  // @@protoc_insertion_point(class_scope:medical_imaging.MsgString)
 private:
  void set_has_context();
  void clear_has_context();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr context_;
  friend struct protobuf_mi_5fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgPoint2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:medical_imaging.MsgPoint2) */ {
 public:
  MsgPoint2();
  virtual ~MsgPoint2();

  MsgPoint2(const MsgPoint2& from);

  inline MsgPoint2& operator=(const MsgPoint2& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPoint2& default_instance();

  static inline const MsgPoint2* internal_default_instance() {
    return reinterpret_cast<const MsgPoint2*>(
               &_MsgPoint2_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(MsgPoint2* other);

  // implements Message ----------------------------------------------

  inline MsgPoint2* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgPoint2* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgPoint2& from);
  void MergeFrom(const MsgPoint2& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgPoint2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // required float y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // @@protoc_insertion_point(class_scope:medical_imaging.MsgPoint2)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float x_;
  float y_;
  friend struct protobuf_mi_5fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgPaging : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:medical_imaging.MsgPaging) */ {
 public:
  MsgPaging();
  virtual ~MsgPaging();

  MsgPaging(const MsgPaging& from);

  inline MsgPaging& operator=(const MsgPaging& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPaging& default_instance();

  static inline const MsgPaging* internal_default_instance() {
    return reinterpret_cast<const MsgPaging*>(
               &_MsgPaging_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(MsgPaging* other);

  // implements Message ----------------------------------------------

  inline MsgPaging* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgPaging* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgPaging& from);
  void MergeFrom(const MsgPaging& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgPaging* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 page = 1;
  bool has_page() const;
  void clear_page();
  static const int kPageFieldNumber = 1;
  ::google::protobuf::int32 page() const;
  void set_page(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:medical_imaging.MsgPaging)
 private:
  void set_has_page();
  void clear_has_page();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 page_;
  friend struct protobuf_mi_5fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgMouse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:medical_imaging.MsgMouse) */ {
 public:
  MsgMouse();
  virtual ~MsgMouse();

  MsgMouse(const MsgMouse& from);

  inline MsgMouse& operator=(const MsgMouse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMouse& default_instance();

  static inline const MsgMouse* internal_default_instance() {
    return reinterpret_cast<const MsgMouse*>(
               &_MsgMouse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(MsgMouse* other);

  // implements Message ----------------------------------------------

  inline MsgMouse* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgMouse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgMouse& from);
  void MergeFrom(const MsgMouse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgMouse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .medical_imaging.MsgPoint2 pre = 1;
  bool has_pre() const;
  void clear_pre();
  static const int kPreFieldNumber = 1;
  const ::medical_imaging::MsgPoint2& pre() const;
  ::medical_imaging::MsgPoint2* mutable_pre();
  ::medical_imaging::MsgPoint2* release_pre();
  void set_allocated_pre(::medical_imaging::MsgPoint2* pre);

  // required .medical_imaging.MsgPoint2 cur = 2;
  bool has_cur() const;
  void clear_cur();
  static const int kCurFieldNumber = 2;
  const ::medical_imaging::MsgPoint2& cur() const;
  ::medical_imaging::MsgPoint2* mutable_cur();
  ::medical_imaging::MsgPoint2* release_cur();
  void set_allocated_cur(::medical_imaging::MsgPoint2* cur);

  // required int32 tag = 3;
  bool has_tag() const;
  void clear_tag();
  static const int kTagFieldNumber = 3;
  ::google::protobuf::int32 tag() const;
  void set_tag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:medical_imaging.MsgMouse)
 private:
  void set_has_pre();
  void clear_has_pre();
  void set_has_cur();
  void clear_has_cur();
  void set_has_tag();
  void clear_has_tag();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::medical_imaging::MsgPoint2* pre_;
  ::medical_imaging::MsgPoint2* cur_;
  ::google::protobuf::int32 tag_;
  friend struct protobuf_mi_5fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgCellInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:medical_imaging.MsgCellInfo) */ {
 public:
  MsgCellInfo();
  virtual ~MsgCellInfo();

  MsgCellInfo(const MsgCellInfo& from);

  inline MsgCellInfo& operator=(const MsgCellInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCellInfo& default_instance();

  static inline const MsgCellInfo* internal_default_instance() {
    return reinterpret_cast<const MsgCellInfo*>(
               &_MsgCellInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(MsgCellInfo* other);

  // implements Message ----------------------------------------------

  inline MsgCellInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgCellInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgCellInfo& from);
  void MergeFrom(const MsgCellInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgCellInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // required int32 direction = 3;
  bool has_direction() const;
  void clear_direction();
  static const int kDirectionFieldNumber = 3;
  ::google::protobuf::int32 direction() const;
  void set_direction(::google::protobuf::int32 value);

  // required int32 width = 4;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 4;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // required int32 height = 5;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 5;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:medical_imaging.MsgCellInfo)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_type();
  void clear_has_type();
  void set_has_direction();
  void clear_has_direction();
  void set_has_width();
  void clear_has_width();
  void set_has_height();
  void clear_has_height();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 direction_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  friend struct protobuf_mi_5fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgInit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:medical_imaging.MsgInit) */ {
 public:
  MsgInit();
  virtual ~MsgInit();

  MsgInit(const MsgInit& from);

  inline MsgInit& operator=(const MsgInit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgInit& default_instance();

  static inline const MsgInit* internal_default_instance() {
    return reinterpret_cast<const MsgInit*>(
               &_MsgInit_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(MsgInit* other);

  // implements Message ----------------------------------------------

  inline MsgInit* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgInit* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgInit& from);
  void MergeFrom(const MsgInit& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgInit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .medical_imaging.MsgCellInfo cells = 3;
  int cells_size() const;
  void clear_cells();
  static const int kCellsFieldNumber = 3;
  const ::medical_imaging::MsgCellInfo& cells(int index) const;
  ::medical_imaging::MsgCellInfo* mutable_cells(int index);
  ::medical_imaging::MsgCellInfo* add_cells();
  ::google::protobuf::RepeatedPtrField< ::medical_imaging::MsgCellInfo >*
      mutable_cells();
  const ::google::protobuf::RepeatedPtrField< ::medical_imaging::MsgCellInfo >&
      cells() const;

  // required string series_uid = 2;
  bool has_series_uid() const;
  void clear_series_uid();
  static const int kSeriesUidFieldNumber = 2;
  const ::std::string& series_uid() const;
  void set_series_uid(const ::std::string& value);
  #if LANG_CXX11
  void set_series_uid(::std::string&& value);
  #endif
  void set_series_uid(const char* value);
  void set_series_uid(const char* value, size_t size);
  ::std::string* mutable_series_uid();
  ::std::string* release_series_uid();
  void set_allocated_series_uid(::std::string* series_uid);

  // required int32 pid = 1;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 1;
  ::google::protobuf::int32 pid() const;
  void set_pid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:medical_imaging.MsgInit)
 private:
  void set_has_pid();
  void clear_has_pid();
  void set_has_series_uid();
  void clear_has_series_uid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::medical_imaging::MsgCellInfo > cells_;
  ::google::protobuf::internal::ArenaStringPtr series_uid_;
  ::google::protobuf::int32 pid_;
  friend struct protobuf_mi_5fmessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgString

// required string context = 1;
inline bool MsgString::has_context() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgString::set_has_context() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgString::clear_has_context() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgString::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_context();
}
inline const ::std::string& MsgString::context() const {
  // @@protoc_insertion_point(field_get:medical_imaging.MsgString.context)
  return context_.GetNoArena();
}
inline void MsgString::set_context(const ::std::string& value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:medical_imaging.MsgString.context)
}
#if LANG_CXX11
inline void MsgString::set_context(::std::string&& value) {
  set_has_context();
  context_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:medical_imaging.MsgString.context)
}
#endif
inline void MsgString::set_context(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:medical_imaging.MsgString.context)
}
inline void MsgString::set_context(const char* value, size_t size) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:medical_imaging.MsgString.context)
}
inline ::std::string* MsgString::mutable_context() {
  set_has_context();
  // @@protoc_insertion_point(field_mutable:medical_imaging.MsgString.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgString::release_context() {
  // @@protoc_insertion_point(field_release:medical_imaging.MsgString.context)
  clear_has_context();
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgString::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    set_has_context();
  } else {
    clear_has_context();
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:medical_imaging.MsgString.context)
}

// -------------------------------------------------------------------

// MsgPoint2

// required float x = 1;
inline bool MsgPoint2::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPoint2::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPoint2::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPoint2::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float MsgPoint2::x() const {
  // @@protoc_insertion_point(field_get:medical_imaging.MsgPoint2.x)
  return x_;
}
inline void MsgPoint2::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:medical_imaging.MsgPoint2.x)
}

// required float y = 2;
inline bool MsgPoint2::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgPoint2::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgPoint2::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgPoint2::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float MsgPoint2::y() const {
  // @@protoc_insertion_point(field_get:medical_imaging.MsgPoint2.y)
  return y_;
}
inline void MsgPoint2::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:medical_imaging.MsgPoint2.y)
}

// -------------------------------------------------------------------

// MsgPaging

// required int32 page = 1;
inline bool MsgPaging::has_page() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgPaging::set_has_page() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgPaging::clear_has_page() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgPaging::clear_page() {
  page_ = 0;
  clear_has_page();
}
inline ::google::protobuf::int32 MsgPaging::page() const {
  // @@protoc_insertion_point(field_get:medical_imaging.MsgPaging.page)
  return page_;
}
inline void MsgPaging::set_page(::google::protobuf::int32 value) {
  set_has_page();
  page_ = value;
  // @@protoc_insertion_point(field_set:medical_imaging.MsgPaging.page)
}

// -------------------------------------------------------------------

// MsgMouse

// required .medical_imaging.MsgPoint2 pre = 1;
inline bool MsgMouse::has_pre() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgMouse::set_has_pre() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgMouse::clear_has_pre() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgMouse::clear_pre() {
  if (pre_ != NULL) pre_->::medical_imaging::MsgPoint2::Clear();
  clear_has_pre();
}
inline const ::medical_imaging::MsgPoint2& MsgMouse::pre() const {
  // @@protoc_insertion_point(field_get:medical_imaging.MsgMouse.pre)
  return pre_ != NULL ? *pre_
                         : *::medical_imaging::MsgPoint2::internal_default_instance();
}
inline ::medical_imaging::MsgPoint2* MsgMouse::mutable_pre() {
  set_has_pre();
  if (pre_ == NULL) {
    pre_ = new ::medical_imaging::MsgPoint2;
  }
  // @@protoc_insertion_point(field_mutable:medical_imaging.MsgMouse.pre)
  return pre_;
}
inline ::medical_imaging::MsgPoint2* MsgMouse::release_pre() {
  // @@protoc_insertion_point(field_release:medical_imaging.MsgMouse.pre)
  clear_has_pre();
  ::medical_imaging::MsgPoint2* temp = pre_;
  pre_ = NULL;
  return temp;
}
inline void MsgMouse::set_allocated_pre(::medical_imaging::MsgPoint2* pre) {
  delete pre_;
  pre_ = pre;
  if (pre) {
    set_has_pre();
  } else {
    clear_has_pre();
  }
  // @@protoc_insertion_point(field_set_allocated:medical_imaging.MsgMouse.pre)
}

// required .medical_imaging.MsgPoint2 cur = 2;
inline bool MsgMouse::has_cur() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgMouse::set_has_cur() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgMouse::clear_has_cur() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgMouse::clear_cur() {
  if (cur_ != NULL) cur_->::medical_imaging::MsgPoint2::Clear();
  clear_has_cur();
}
inline const ::medical_imaging::MsgPoint2& MsgMouse::cur() const {
  // @@protoc_insertion_point(field_get:medical_imaging.MsgMouse.cur)
  return cur_ != NULL ? *cur_
                         : *::medical_imaging::MsgPoint2::internal_default_instance();
}
inline ::medical_imaging::MsgPoint2* MsgMouse::mutable_cur() {
  set_has_cur();
  if (cur_ == NULL) {
    cur_ = new ::medical_imaging::MsgPoint2;
  }
  // @@protoc_insertion_point(field_mutable:medical_imaging.MsgMouse.cur)
  return cur_;
}
inline ::medical_imaging::MsgPoint2* MsgMouse::release_cur() {
  // @@protoc_insertion_point(field_release:medical_imaging.MsgMouse.cur)
  clear_has_cur();
  ::medical_imaging::MsgPoint2* temp = cur_;
  cur_ = NULL;
  return temp;
}
inline void MsgMouse::set_allocated_cur(::medical_imaging::MsgPoint2* cur) {
  delete cur_;
  cur_ = cur;
  if (cur) {
    set_has_cur();
  } else {
    clear_has_cur();
  }
  // @@protoc_insertion_point(field_set_allocated:medical_imaging.MsgMouse.cur)
}

// required int32 tag = 3;
inline bool MsgMouse::has_tag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgMouse::set_has_tag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgMouse::clear_has_tag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgMouse::clear_tag() {
  tag_ = 0;
  clear_has_tag();
}
inline ::google::protobuf::int32 MsgMouse::tag() const {
  // @@protoc_insertion_point(field_get:medical_imaging.MsgMouse.tag)
  return tag_;
}
inline void MsgMouse::set_tag(::google::protobuf::int32 value) {
  set_has_tag();
  tag_ = value;
  // @@protoc_insertion_point(field_set:medical_imaging.MsgMouse.tag)
}

// -------------------------------------------------------------------

// MsgCellInfo

// required int32 id = 1;
inline bool MsgCellInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgCellInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgCellInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgCellInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 MsgCellInfo::id() const {
  // @@protoc_insertion_point(field_get:medical_imaging.MsgCellInfo.id)
  return id_;
}
inline void MsgCellInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:medical_imaging.MsgCellInfo.id)
}

// required int32 type = 2;
inline bool MsgCellInfo::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgCellInfo::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgCellInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgCellInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MsgCellInfo::type() const {
  // @@protoc_insertion_point(field_get:medical_imaging.MsgCellInfo.type)
  return type_;
}
inline void MsgCellInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:medical_imaging.MsgCellInfo.type)
}

// required int32 direction = 3;
inline bool MsgCellInfo::has_direction() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MsgCellInfo::set_has_direction() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MsgCellInfo::clear_has_direction() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MsgCellInfo::clear_direction() {
  direction_ = 0;
  clear_has_direction();
}
inline ::google::protobuf::int32 MsgCellInfo::direction() const {
  // @@protoc_insertion_point(field_get:medical_imaging.MsgCellInfo.direction)
  return direction_;
}
inline void MsgCellInfo::set_direction(::google::protobuf::int32 value) {
  set_has_direction();
  direction_ = value;
  // @@protoc_insertion_point(field_set:medical_imaging.MsgCellInfo.direction)
}

// required int32 width = 4;
inline bool MsgCellInfo::has_width() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MsgCellInfo::set_has_width() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MsgCellInfo::clear_has_width() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MsgCellInfo::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 MsgCellInfo::width() const {
  // @@protoc_insertion_point(field_get:medical_imaging.MsgCellInfo.width)
  return width_;
}
inline void MsgCellInfo::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:medical_imaging.MsgCellInfo.width)
}

// required int32 height = 5;
inline bool MsgCellInfo::has_height() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MsgCellInfo::set_has_height() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MsgCellInfo::clear_has_height() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MsgCellInfo::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 MsgCellInfo::height() const {
  // @@protoc_insertion_point(field_get:medical_imaging.MsgCellInfo.height)
  return height_;
}
inline void MsgCellInfo::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:medical_imaging.MsgCellInfo.height)
}

// -------------------------------------------------------------------

// MsgInit

// required int32 pid = 1;
inline bool MsgInit::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgInit::set_has_pid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgInit::clear_has_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgInit::clear_pid() {
  pid_ = 0;
  clear_has_pid();
}
inline ::google::protobuf::int32 MsgInit::pid() const {
  // @@protoc_insertion_point(field_get:medical_imaging.MsgInit.pid)
  return pid_;
}
inline void MsgInit::set_pid(::google::protobuf::int32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:medical_imaging.MsgInit.pid)
}

// required string series_uid = 2;
inline bool MsgInit::has_series_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgInit::set_has_series_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgInit::clear_has_series_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgInit::clear_series_uid() {
  series_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_series_uid();
}
inline const ::std::string& MsgInit::series_uid() const {
  // @@protoc_insertion_point(field_get:medical_imaging.MsgInit.series_uid)
  return series_uid_.GetNoArena();
}
inline void MsgInit::set_series_uid(const ::std::string& value) {
  set_has_series_uid();
  series_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:medical_imaging.MsgInit.series_uid)
}
#if LANG_CXX11
inline void MsgInit::set_series_uid(::std::string&& value) {
  set_has_series_uid();
  series_uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:medical_imaging.MsgInit.series_uid)
}
#endif
inline void MsgInit::set_series_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_series_uid();
  series_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:medical_imaging.MsgInit.series_uid)
}
inline void MsgInit::set_series_uid(const char* value, size_t size) {
  set_has_series_uid();
  series_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:medical_imaging.MsgInit.series_uid)
}
inline ::std::string* MsgInit::mutable_series_uid() {
  set_has_series_uid();
  // @@protoc_insertion_point(field_mutable:medical_imaging.MsgInit.series_uid)
  return series_uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgInit::release_series_uid() {
  // @@protoc_insertion_point(field_release:medical_imaging.MsgInit.series_uid)
  clear_has_series_uid();
  return series_uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgInit::set_allocated_series_uid(::std::string* series_uid) {
  if (series_uid != NULL) {
    set_has_series_uid();
  } else {
    clear_has_series_uid();
  }
  series_uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), series_uid);
  // @@protoc_insertion_point(field_set_allocated:medical_imaging.MsgInit.series_uid)
}

// repeated .medical_imaging.MsgCellInfo cells = 3;
inline int MsgInit::cells_size() const {
  return cells_.size();
}
inline void MsgInit::clear_cells() {
  cells_.Clear();
}
inline const ::medical_imaging::MsgCellInfo& MsgInit::cells(int index) const {
  // @@protoc_insertion_point(field_get:medical_imaging.MsgInit.cells)
  return cells_.Get(index);
}
inline ::medical_imaging::MsgCellInfo* MsgInit::mutable_cells(int index) {
  // @@protoc_insertion_point(field_mutable:medical_imaging.MsgInit.cells)
  return cells_.Mutable(index);
}
inline ::medical_imaging::MsgCellInfo* MsgInit::add_cells() {
  // @@protoc_insertion_point(field_add:medical_imaging.MsgInit.cells)
  return cells_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::medical_imaging::MsgCellInfo >*
MsgInit::mutable_cells() {
  // @@protoc_insertion_point(field_mutable_list:medical_imaging.MsgInit.cells)
  return &cells_;
}
inline const ::google::protobuf::RepeatedPtrField< ::medical_imaging::MsgCellInfo >&
MsgInit::cells() const {
  // @@protoc_insertion_point(field_list:medical_imaging.MsgInit.cells)
  return cells_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace medical_imaging

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mi_5fmessage_2eproto__INCLUDED
