syntax = "proto3";

package medical_imaging;

message MsgFloat {
    float value = 1;
}

message MsgInt {
    int32 value = 1;
}

message MsgFlag {
    bool flag = 1; 
}

message MsgString {
    string context = 1;
};

message MsgPoint2 {
    float x = 1;
    float y = 2;
};

message MsgRotation {
    float angle = 1;
    float axis_x = 2;
    float axis_y = 3;
    float axis_z = 4;
};

message MsgMouse {
    MsgPoint2 pre = 1;
    MsgPoint2 cur = 2;
    int32 tag = 3;
};

message MsgCellInfo {
    int32 id = 1;
    int32 type = 2;
    int32 direction = 3;
    int32 width = 4;
    int32 height = 5;
};

message MsgInit {
    int64 patient_pk = 1;
    int64 study_pk = 2;
    int64 series_pk = 3;
    string user_id = 4;
    repeated MsgCellInfo cells = 5;
};

message MsgResize {
    repeated MsgCellInfo cells = 1;
};

message MsgNoneImgCornerInfos {
    string infos = 1;
};

message MsgAnnotationUnit {
    int32 type = 1; //0 for circle ...
    string id = 2; // id format: "time|num"
    int32 status = 3; //0 add; 1 delete; 2 modifying; 3 modify_completed
    int32 visibility = 4; // visibility
    float para0 = 5; //center x
    float para1 = 6; //center y
    float para2 = 7; //radius
    float para3 = 8; //diameter
    string info = 9; //statistic info
    float probability = 10;//probability
};

message MsgNoneImgAnnotations {
    repeated MsgAnnotationUnit annotation = 1;
};

message MsgAnnotationQuery {
    int32 role = 1; //0 for Ai; 1 for user
    string username = 2; 
    string series_uid = 3;
};

message MsgNoneImgDirection {
    string info = 2;// left|right|top|bottom
};

message MsgCrosshair {
    float cx = 1;//crosshair
    float cy = 2;
    float l0_a = 3;// ax+by=c
    float l0_b = 4;
    float l0_c = 5;
    float l1_a = 6;
    float l1_b = 7;
    float l1_c = 8;
    string l0_color = 9; //hex
    string l1_color = 10;
    string border_color = 11;
};

message MsgFrustum {
    float width = 1;
    float height = 2;
};

message MsgNoneImgCollection {
    MsgNoneImgCornerInfos corner_infos = 1;
    MsgNoneImgAnnotations annotations = 2;
    MsgNoneImgDirection direction = 3;
    MsgCrosshair crosshair = 4;
    MsgFrustum frustum = 5;
};

message MsgMPRMaskOverlay {
    int32 flag = 1;
    float opacity = 2;
};

//for DB server to BE server
message MsgAnnotationCollectionDB {
    string series_uid = 1;
    repeated MsgAnnotationUnitDB annotation = 2;
};

//for DB server to AIS server
message MsgEvaluationRequest {
    string series_uid = 1; //series uid
    int64 series_pk = 2; // for DB
    int64 eva_pk = 3; // for DB
    int eva_type = 4; // for DB
    int64 prep_pk = 5; // for DB
    int64 prep_type = 6; // for DB
    string eva_file_path = 7; //output evaluation file path
    string ai_prep_file_path = 9; //intermediate data path for AI algorithm(resample volume ...), if recal_im_data is true, this file will be create/update
    bool recal_im_data = 9; //recalculate AI intermediate data flag
    uint64 client_socket_id = 10; //requested client socket ID
    repeated string instance_files = 11; //if recal_im_data is true, this para will be used
};

//for AIS server back to DB server
message MsgEvaluationResponse {
    int32 status = 1;//0 success -1 error
    string series_uid = 2; // series uid
    int64 series_pk = 3; // for DB
    int64 eva_pk = 4; // for DB
    int64 eva_type = 5; // for DB
    int64 prep_pk = 6; // for DB
    int64 prep_type = 7; // for DB
    string eva_version = 8;
    string ai_prep_version = 9;
    string eva_file_path = 10; //output evaluation file path
    string ai_prep_file_path = 11; //intermediate data path for AI algorithm,if recal_im_data is true, DBS shoule update DB
    bool recal_im_data = 12;//recalculate AI intermediate data flag
    uint64 client_socket_id = 13; //requested client socket ID
    string err_msg = 14;//err message
};

//DB PACS query&retrieve

message MsgPatientInfo {
    string patient_id = 2;
    string patient_name = 3;
    string patient_sex = 4;
    string patient_birth_date = 5;
};

message MsgStudyInfo {
    int64 patient_fk = 2;
    string study_id = 3;
    string study_uid = 4;
    string study_date = 5;
    string study_time = 6;
    string accession_no = 7;
    string study_desc = 8;
    int32 num_series = 9;
    int32 num_instance = 10;
};

message MsgSeriesInfo {
    int64 id = 1;//for app loading
    string series_uid = 3;
    string series_no = 4;
    string modality = 5;
    string series_desc = 6;
    string institution = 7;
    int32 num_instance = 8;
};

message MsgStudyWrapper {
    MsgStudyInfo study_info = 1;
    MsgPatientInfo patient_info = 2;
    repeated MsgSeriesInfo series_infos = 3;
};

message MsgStudyWrapperCollection {
    repeated MsgStudyWrapper study_wrappers = 1;
    int32 num_study = 2;
};

message MsgDcmQueryKey {
    string patient_id = 1;
    string patient_name = 2;
    string patient_birth_date = 3;

    string study_date = 4;
    string study_time = 5;
    string accession_no = 6;

    string modality = 7;
};

message MsgDcmPACSRetrieveKey {
    repeated string series_uid = 2;
    repeated string study_uid = 3;
}

message MsgDcmDBRetrieveKey {
    int64 series_pk = 1;
};

message MsgEvaluationRetrieveKey {
    string series_uid = 1;
    string study_uid = 2;
    int64 series_pk = 3;
    int32 eva_type = 4;
};

message MsgPreprocessRetrieveKey {
    string series_uid = 1;
    int64 series_pk = 2;
    int32 prep_type = 3;
};

//for DB server to BE server
message MsgAnnotationUnitDB {
    float x = 1; //center x
    float y = 2; //center y
    float z = 3; //center z
    float r = 4; //diameter 
    float p = 5; //probability
};




message MsgDcmInfo {
    string study_id = 1;
    string series_id = 2;
    string study_date = 3;
    string study_time = 4;
    string patient_id = 5;
    string patient_name = 6;
    string patient_sex = 7;
    string patient_birth_date = 8;
    string modality = 9;
    string instance_number = 10;
    string accession_number = 11;
};

message MsgDcmInfoCollection {
    repeated MsgDcmInfo dcminfo = 1;
};